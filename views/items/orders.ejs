<% layout('../layout/boilerplate') -%>

<%
function getOrderCategory(createdAt) {
    // Parse the order date and convert it to IST
    const orderDate = new Date(createdAt);
    const orderDateIST = new Date(orderDate.toLocaleString("en-US", { timeZone: "Asia/Kolkata" }));

    // Get today's date and midnight in IST
    const today = new Date();
    const todayIST = new Date(today.toLocaleString("en-US", { timeZone: "Asia/Kolkata" }));
    const midnightTodayIST = new Date(todayIST.getFullYear(), todayIST.getMonth(), todayIST.getDate());

    // Calculate midnight of yesterday in IST
    const midnightYesterdayIST = new Date(midnightTodayIST);
    midnightYesterdayIST.setDate(midnightYesterdayIST.getDate() - 1);

    // Determine the category based on the order date
    if (orderDateIST >= midnightTodayIST) {
        return "Today's Orders";
    } else if (orderDateIST >= midnightYesterdayIST) {
        return "Yesterday's Orders";
    } else {
        const diffInTime = midnightTodayIST - orderDateIST; // Difference from today's midnight
        const diffInDays = Math.ceil(diffInTime / (1000 * 60 * 60 * 24)); // Convert milliseconds to days
        return `${diffInDays} Days Ago`;
    }
}


const groupedOrders = new Map();

for (let order of allOrder) {
    const category = getOrderCategory(order.createdAt);
    if (!groupedOrders.has(category)) {
        groupedOrders.set(category, []);
    }
    groupedOrders.get(category).push(order);
}

// Sort categories based on priority (today, yesterday, then older orders)
const sortedCategories = Array.from(groupedOrders.keys()).sort((a, b) => {
    const categoryToDays = {
        "Today's Orders": 0,
        "Yesterday's Orders": 1
    };

    const daysA = categoryToDays[a] ?? parseInt(a.split(' ')[0]);
    const daysB = categoryToDays[b] ?? parseInt(b.split(' ')[0]);
    return daysA - daysB;
});
%>

<% for (let category of sortedCategories) { %>
    <h2><%= category %></h2>
    <% let serialNumber = 1; %>
    <% for (let order of groupedOrders.get(category)) { %>
        <hr>
        <% let user = order.author %>
        
        <li class="list-group-item">
            Order #<%= serialNumber %> placed at : 
            <%= new Date(order.createdAt).toLocaleString("en-IN", { 
                timeZone: "Asia/Kolkata", 
                year: "numeric", 
                month: "short", 
                day: "numeric", 
                hour: "2-digit", 
                minute: "2-digit" 
            }); %>
        </li>
                </li>
        <ul class="list-group list-group-horizontal justify-content-between">
            <li class="list-group-item"><%= user.name %></li>
            <li class="list-group-item"><%= user.mobile %></li>
            <li class="list-group-item">
                <% if (user.coordinates) { %>
                    <a href="https://www.google.com/maps?q=<%= user.coordinates[1] %>,<%= user.coordinates[0] %>">
                        <button type="button" class="btn btn-success">
                            <i class="fa-solid fa-location-dot"></i>
                        </button>
                    </a>
                <% } else { %>
                    <span class="text-danger">Location not available</span>
                <% } %>
            </li>
            <li class="list-group-item">
                <form method="POST" action="/order/<%= order._id %>/delete?_method=DELETE" onsubmit="return confirmDelete()">
                    <button class="btn btn-danger"><i class="fa-solid fa-trash"></i></button>
                </form>
            </li>
        </ul>

        <table class="table table-primary">
            <thead class="thead-primary">
                <tr>
                    <th>Item</th>
                    <th>Type</th>
                    <th>Price</th>
                    <th>Quan.</th>
                    <th>Rate (&#8377;)</th>
                </tr>
            </thead>
            <tbody>
                <% let sum = 0; %>
                <% for (let orderItem of order.items) { %>
                    <tr>
                        <td><%= orderItem.item.title %></td>
                        <td><%= orderItem.item.typ %></td>
                        <td><%= orderItem.item.price.toLocaleString("en-IN") %> &#8377;/<%= orderItem.item.unit %></td>
                        <td><%= orderItem.item.quantity.toLocaleString("en-IN") %> <%= orderItem.item.unit %></td>
                        <td><%= (orderItem.item.quantity * orderItem.item.price).toLocaleString("en-IN") %></td>
                    </tr>
                    <% sum += orderItem.item.quantity * orderItem.item.price %>
                <% } %>
                <tr>
                    <td><b>Delivery</b></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><b><%= (user.distance > 3 ? (user.distance * 4).toFixed(2) : "0.00").toLocaleString("en-IN") %></b></td>
                </tr>
                <tr>
                    <td><b>Balance Due</b></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><b><%= user.balance_due.toLocaleString("en-IN") %></b></td>
                </tr>
                <tr>
                    <td><b>Total</b></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <b>
                            <%= (Math.floor(sum + user.balance_due + (user.distance > 3 ? (user.distance * 4) : 0))).toLocaleString("en-IN") %>
                        </b>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="d-grid gap-2 col-12 mx-auto">
            <form method="POST" action="/owner/<%= order._id %>/status">
                <div class="form-floating mb-1">
                    <select class="form-select" id="floatingSelect_<%= order._id %>" name="orderStatus">
                        <option selected><%= order.status %></option>
                        <option value="1">Order Processing</option>
                        <option value="2">Shipped</option>
                        <option value="3">Out for Delivery</option>
                        <option value="4">Delivered</option>
                    </select>
                    <label for="floatingSelect">Order Status</label>
                </div>
                <button type="submit" class="btn btn-success" id="updateStatusBtn_<%= order._id %>" disabled>Update Status</button>
            </form>
        </div>
        <% serialNumber++; %>
    <% } %>
    <br>
<% } %>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const selectBoxes = document.querySelectorAll(".form-select");

        selectBoxes.forEach(function(selectBox) {
            selectBox.addEventListener('change', function () {
                const orderId = selectBox.id.split("_")[1];
                const updateButton = document.getElementById("updateStatusBtn_" + orderId);
                updateButton.disabled = selectBox.value === "";
            });
        });
    });
    function confirmDelete() {
        return confirm("Are you sure you want to delete this order?");
    }
</script>
