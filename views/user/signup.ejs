<% layout('../layout/boilerplateLocation') -%>

    <div class="row">
        <div class="text-center">
            <img src="https://res.cloudinary.com/dzrxswqur/image/upload/v1739196654/icon-512x512_iqnv9i.png"
                height="180px" style="border-radius: 50%; box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);">
        </div>
        <div>
            <form action="/signup" method="POST">
                <div class="mb-3">
                    <label for="customer-username" class="form-label">Name/Username</label>
                    <input type="text" name="username" id="customer-username" placeholder="Enter catchy username"
                        class="form-control" required>
                    <div class="valid-feedback">Looks good</div>
                </div>
                <div class="mb-3">
                    <label for="customer-mobile" class="form-label">Mobile No.</label>
                    <input type="tel" name="mobile" id="customer-mobile" placeholder="+91XXXXXXXXXX"
                        class="form-control" pattern="^\+91\d{10}$" required value="+91">
                    <div class="invalid-feedback">Please enter a valid mobile number in +91XXXXXXXXXX format.</div>

                </div>
                <button type="button" class="btn btn-primary w-100 no-spinner" id="get-otp">Get OTP</button>

                <div class="mb-3 mt-3 d-none" id="otp-section">
                    <label for="otp-input" class="form-label fs-8" style="font-size: smaller;color: green;">Enter the
                        OTP that we have sent on WhatsApp</label>
                    <input type="number" id="otp-input" class="form-control" placeholder="Enter OTP" required>
                    <div class="invalid-feedback">Please enter a valid OTP.</div>
                    <button type="button" class="btn btn-success w-100 mt-2 no-spinner" id="verify-otp">Verify
                        OTP</button>
                </div>

                <div class="mb-3 mt-3 d-none" id="password-section">
                    <label for="customer-password" class="form-label">Password</label>
                    <input type="password" name="password" id="customer-password" placeholder="Enter strong password"
                        class="form-control" required>

                    <label for="customer-confirm-password" class="form-label mt-2">Confirm Password</label>
                    <input type="password" name="confirm-password" id="customer-confirm-password"
                        placeholder="Re-enter password" class="form-control" required>
                    <div class="invalid-feedback">Passwords do not match.</div>
                </div>

                <button type="submit" class="btn btn-success w-100 d-none" id="signup-button">Sign Up as
                    Customer</button>
            </form>
        </div>
    </div>
    <br>

    <script>
       document.getElementById("get-otp").addEventListener("click", async function () {
            let mobileInput = document.getElementById("customer-mobile");
            let mobileValue = mobileInput.value.trim();

            // Validate: Must start with +91 and have exactly 13 characters
            if (!/^\+91\d{10}$/.test(mobileValue)) {
                mobileInput.classList.add("is-invalid");
                return;
            }
            mobileInput.classList.remove("is-invalid");

            this.textContent = "Sending OTP...";

            try {
                let response = await fetch("http://localhost:8080/send-otp", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ mobile: mobileValue })
                });

                let data = await response.json();
                if (response.ok) {
                    document.getElementById("otp-section").classList.remove("d-none");
                    this.classList.add("d-none");
                } else {
                    alert(data.error);
                }
            } catch (error) {
                alert("Failed to send OTP. Try again.");
            }
        });

        document.getElementById("verify-otp").addEventListener("click", async function () {
            let otpInput = document.getElementById("otp-input");
            let otpValue = otpInput.value.trim();
            let mobileValue = document.getElementById("customer-mobile").value.trim();

            if (otpValue.length < 4) {
                otpInput.classList.add("is-invalid");
                return;
            }
            otpInput.classList.remove("is-invalid");

            this.textContent = "Verifying...";

            try {
                let response = await fetch("http://localhost:8080/verify-otp", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ mobile: mobileValue, otp: otpValue })
                });

                let data = await response.json();
                if (response.ok) {
                    document.getElementById("otp-section").classList.add("d-none");
                    document.getElementById("password-section").classList.remove("d-none");
                    document.getElementById("signup-button").classList.remove("d-none");
                } else {
                    alert(data.error);
                    this.textContent = "Verify OTP";
                }
            } catch (error) {
                alert("Failed to verify OTP. Try again.");
                this.textContent = "Verify OTP";
            }
        });


        document.getElementById("signup-button").addEventListener("click", function (e) {
            let password = document.getElementById("customer-password").value;
            let confirmPassword = document.getElementById("customer-confirm-password").value;

            if (password !== confirmPassword) {
                document.getElementById("customer-confirm-password").classList.add("is-invalid");
                e.preventDefault();
            } else {
                document.getElementById("customer-confirm-password").classList.remove("is-invalid");
            }
        });
        document.addEventListener("DOMContentLoaded", function () {
        const usernameInput = document.getElementById("customer-username");
        const passwordInput = document.getElementById("customer-password");
        const confirmPasswordInput = document.getElementById("customer-confirm-password");
        const signupButton = document.getElementById("signup-button");

        function validateUsername() {
            const username = usernameInput.value.trim();
            if (username.length >= 4 && username.length <= 20) {
                usernameInput.classList.remove("is-invalid");
                usernameInput.classList.add("is-valid");
            } else {
                usernameInput.classList.remove("is-valid");
                usernameInput.classList.add("is-invalid");
            }
        }

        function validatePassword() {
            const password = passwordInput.value.trim();
            if (password.length >= 8 && password.length <= 20) {
                passwordInput.classList.remove("is-invalid");
                passwordInput.classList.add("is-valid");
            } else {
                passwordInput.classList.remove("is-valid");
                passwordInput.classList.add("is-invalid");
            }
        }

        function checkPasswordMatch() {
            if (passwordInput.value === confirmPasswordInput.value && passwordInput.value.length >= 8) {
                confirmPasswordInput.classList.remove("is-invalid");
                confirmPasswordInput.classList.add("is-valid");
                signupButton.classList.remove("d-none");
            } else {
                confirmPasswordInput.classList.remove("is-valid");
                confirmPasswordInput.classList.add("is-invalid");
                signupButton.classList.add("d-none");
            }
        }

        usernameInput.addEventListener("input", validateUsername);
        passwordInput.addEventListener("input", validatePassword);
        confirmPasswordInput.addEventListener("input", checkPasswordMatch);
        });
        document.addEventListener("DOMContentLoaded", function () {
            const mobileInput = document.getElementById("customer-mobile");
            const getOtpButton = document.getElementById("get-otp");

            function checkMobileUnique() {
                const mobile = mobileInput.value.trim();
                
                if (!/^\+91\d{10}$/.test(mobile)) {
                    mobileInput.classList.add("is-invalid");
                    return;
                }
                
                fetch('/check-mobile', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ mobile })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.exists) {
                        mobileInput.classList.add("is-invalid");
                        mobileInput.nextElementSibling.textContent = "Mobile number already registered!";
                        getOtpButton.setAttribute("disabled", "true");
                    } else {
                        mobileInput.classList.remove("is-invalid");
                        mobileInput.classList.add("is-valid");
                        getOtpButton.removeAttribute("disabled");
                    }
                })
                .catch(error => console.error("Error checking mobile:", error));
            }

            mobileInput.addEventListener("input", checkMobileUnique);
        });

    </script>