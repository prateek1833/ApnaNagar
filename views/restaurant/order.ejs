<% layout('../layout/boilerplate') -%>

<% 
function getOrderCategory(createdAt) {
    const orderDate = new Date(createdAt);
    const orderDateIST = new Date(orderDate.toLocaleString("en-US", { timeZone: "Asia/Kolkata" }));

    const today = new Date();
    const todayIST = new Date(today.toLocaleString("en-US", { timeZone: "Asia/Kolkata" }));
    const midnightTodayIST = new Date(todayIST.getFullYear(), todayIST.getMonth(), todayIST.getDate());

    const midnightYesterdayIST = new Date(midnightTodayIST);
    midnightYesterdayIST.setDate(midnightYesterdayIST.getDate() - 1);

    if (orderDateIST >= midnightTodayIST) {
        return "Today's Orders";
    } else if (orderDateIST >= midnightYesterdayIST) {
        return "Yesterday's Orders";
    } else {
        const diffInTime = midnightTodayIST - orderDateIST;
        const diffInDays = Math.ceil(diffInTime / (1000 * 60 * 60 * 24));
        return `${diffInDays} Days Ago`;
    }
}

const groupedOrders = new Map();

for (const order of orders) {
    const category = getOrderCategory(order.createdAt);
    if (!groupedOrders.has(category)) {
        groupedOrders.set(category, []);
    }
    groupedOrders.get(category).push(order);
}

const sortedCategories = Array.from(groupedOrders.keys()).sort((a, b) => {
    const categoryToDays = {
        "Today's Orders": 0,
        "Yesterday's Orders": 1
    };

    const daysA = categoryToDays[a] ?? parseInt(a.split(' ')[0]);
    const daysB = categoryToDays[b] ?? parseInt(b.split(' ')[0]);
    return daysA - daysB;
});
%>

<% for (const category of sortedCategories) { %>
    <br>
    <h2><%= category %></h2>
    <% let serialNumber = 1; %>
    <% for (const order of groupedOrders.get(category)) { %>
        <hr>
        <% const user = order.author; %>

        <li class="list-group-item">
            Order #<%= serialNumber %> placed at: <%= new Date(order.createdAt).toLocaleString("en-IN", {
                timeZone: "Asia/Kolkata",
                year: "numeric",
                month: "short",
                day: "numeric",
                hour: "2-digit",
                minute: "2-digit"
            }) %>,
            <strong><%=user.mobile%></strong>
        </li>

        <table class="table table-primary">
            <thead class="thead-primary">
                <tr>
                    <th>Item</th>
                    <th>Type</th>
                    <th>Price</th>
                    <th>Quan.</th>
                    <th>Rate (&#8377;)</th>
                </tr>
            </thead>
            <tbody>
                <% let sum = 0; %>
                <% for (const orderItem of order.items) { %>
                    <% 
                        let originalPrice = orderItem.item.price;
                        // let discountedPrice = originalPrice > 50 ? originalPrice * 0.9 : originalPrice * 0.8;
                        let discountedPrice = originalPrice;
                    %>
                    <tr>
                        <td><%= orderItem.item.title %></td>
                        <td><%= orderItem.item.typ %></td>
                        <td><%= discountedPrice.toLocaleString("en-IN") %> &#8377;/<%= orderItem.item.unit %></td>
                        <td><%= orderItem.item.quantity.toLocaleString("en-IN") %> <%= orderItem.item.unit %></td>
                        <td><%= Math.floor((orderItem.item.quantity * discountedPrice)).toLocaleString("en-IN") %></td>
                    </tr>
                    <% sum += orderItem.item.quantity * discountedPrice; %>
                <% } %>
                <tr>
                    <td><b>Total</b></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><b><%= Math.floor(sum.toLocaleString("en-IN")) %></b></td>
                </tr>
            </tbody>
        </table>
        <% if(order.deliveryBoy){ %>
        <div>
            <p><strong>Delivery Boy : </strong><%=order.deliveryBoy.name%>
            <a style="text-decoration: none;"
                href="tel:<%=order.deliveryBoy.name%>"><%=order.deliveryBoy.mobile%></a>
                <br></p>
        </div>
        <% } %>

        <div class="d-grid gap-2 col-12 mx-auto">
            <form method="POST" action="/restaurant/<%= order._id %>/status">
                <div class="form-floating mb-1">
                    <select class="form-select" id="floatingSelect_<%= order._id %>" name="orderStatus">
                        <option selected><%= order.status %></option>
                        <option value="1">Order Received</option>
                        <option value="2">Preparing</option>
                        <option value="3">Out for Delivery</option>
                    </select>
                    <label for="floatingSelect_<%= order._id %>">Order Status</label>
                </div>
                <button type="submit" class="btn btn-success" id="updateStatusBtn_<%= order._id %>" disabled>Update Status</button>
            </form>
        </div>

        <% serialNumber++; %>
    <% } %>
<% } %>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const selectBoxes = document.querySelectorAll(".form-select");

    selectBoxes.forEach(function (selectBox) {
        selectBox.addEventListener('change', function () {
            const orderId = selectBox.id.split("_")[1];
            const updateButton = document.getElementById("updateStatusBtn_" + orderId);
            updateButton.disabled = selectBox.value === "";
        });
    });
});

function confirmDelete() {
    return confirm("Are you sure you want to delete this order?");
}
</script>
