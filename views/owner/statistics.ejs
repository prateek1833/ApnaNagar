<% layout("../layout/boilerplate") -%>

<div class="container">
    <h1 class="text-center">Admin Statistics</h1>

    <!-- Overview -->
    <div class="row mt-4">
        <h5 class="col-md-6 text-center" style="color: red;text-decoration: underline;"><%= previousMonthName %></h5>
        <div class="col-md-6">
            <div class="card text-white bg-success mb-3">
                <div class="card-header">Total Earnings </div>
                <div class="card-body">
                    <h5 class="card-title">₹<%= totalEarnings %></h5>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card text-white bg-info mb-3">
                <div class="card-header">Total Orders</div>
                <div class="card-body">
                    <h5 class="card-title"><%= totalOrders %></h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Selling Items -->
    <div class="mt-5">
        <h3>Top Selling Items</h3>
        <ul class="list-group">
            <% topSellingItems.forEach(item => { %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <%= item.name %>
                    <span class="badge bg-primary rounded-pill"><%= item.quantitySold %> sold</span>
                </li>
            <% }); %>
        </ul>
    </div>

    <!-- Top Customers -->
    <div class="mt-5">
        <h3>Top Customers</h3>
        <ul class="list-group">
            <% topCustomers.forEach(customer => { %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <%= customer.name %>
                    <span class="badge bg-secondary rounded-pill">₹<%= customer.totalSpent %> spent, <%= customer.totalItems %> items</span>
                </li>
            <% }); %>
        </ul>
    </div>

    <!-- Restaurant-wise Item Sales Graph -->
    <div class="mt-5">
        <h3>Restaurant-wise Sales</h3>
        <canvas id="restaurantSalesChart"></canvas>
    </div>

    <!-- Order Trends -->
    <div class="mt-5">
        <h3>Orders by Day of the Week</h3>
        <canvas id="ordersByDayChart"></canvas>
    </div>
    <div class="mt-5">
        <h3>Peak Order Times</h3>
        <canvas id="peakOrderTimeChart"></canvas>
    </div>
</div>

<script>
    const restaurantSales = <%- JSON.stringify(restaurantSales) %>;
    const ordersByDay = <%- JSON.stringify(ordersByDay) %>;
    const peakOrderTimes = <%- JSON.stringify(peakOrderTimes) %>;

    const restaurantLabels = Object.keys(restaurantSales);
    const totalItemsSold = restaurantLabels.map(name => restaurantSales[name].totalItemsSold);
    const totalRevenue = restaurantLabels.map(name => restaurantSales[name].totalRevenue);
    
    // Define days of the week
    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
    const orderCounts = daysOfWeek.map(day => ordersByDay[day] || 0);

// Total Revenue Chart
const restaurantSalesCtx = document.getElementById('restaurantSalesChart').getContext('2d');
new Chart(restaurantSalesCtx, {
    type: 'bar',
    data: {
        labels: restaurantLabels,
        datasets: [
            {
                label: 'Total Revenue (₹)',
                data: totalRevenue,
                backgroundColor: 'rgba(255, 99, 132, 0.7)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            },
            {
                label: 'Total Items Sold',
                data: totalItemsSold,
                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }
        ]
    },
    options: {
        responsive: true,
        scales: {
            x: {
                ticks: { autoSkip: false, maxRotation: 30, minRotation: 30 }
            },
            y: { beginAtZero: true }
        }
    }
});
    
    new Chart(document.getElementById('ordersByDayChart').getContext('2d'), {
        type: 'bar',
        data: {
            labels: daysOfWeek,
            datasets: [{
                label: 'Orders',
                data: orderCounts,
                backgroundColor: 'rgba(75, 192, 192, 0.7)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: { responsive: true, scales: { y: { beginAtZero: true } } }
    });
    
    // Peak Order Time Chart
    const peakTimes = Object.keys(peakOrderTimes).map(time => ({ time, count: peakOrderTimes[time] }));
    peakTimes.sort((a, b) => parseInt(a.time) - parseInt(b.time));
    
    new Chart(document.getElementById('peakOrderTimeChart').getContext('2d'), {
        type: 'line',
        data: {
            labels: peakTimes.map(entry => entry.time + ':00'),
            datasets: [{
                label: 'Orders',
                data: peakTimes.map(entry => entry.count),
                backgroundColor: 'rgba(255, 159, 64, 0.7)',
                borderColor: 'rgba(255, 159, 64, 1)',
                borderWidth: 2,
                fill: false
            }]
        },
        options: { responsive: true, scales: { y: { beginAtZero: true } } }
    });
</script>